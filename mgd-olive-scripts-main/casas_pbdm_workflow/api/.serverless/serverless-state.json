{
  "service": {
    "service": "ict-platform-pbdm-api",
    "serviceObject": {
      "name": "ict-platform-pbdm-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.7",
      "region": "eu-west-1",
      "stage": "dev",
      "endpointType": "REGIONAL",
      "stackTags": {
        "Name": "mgd-ict-platform-backend",
        "Environment": "dev",
        "Role": "pbdm-wf"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-pbdm-api-wf"
            }
          },
          "RequestLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-pbdm-api-state"
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ict-platform-pbdm-api/dev/1693936854668-2023-09-05T18:00:54.668Z/ict-platform-pbdm-api.zip"
              },
              "Handler": "functions/api.index",
              "Runtime": "python3.7",
              "FunctionName": "dev-pbdm-api-wf",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "sf_arn": {
                    "Fn::Sub": "arn:aws:states:eu-west-1:${AWS::AccountId}:stateMachine:dev-pbdm-sf"
                  },
                  "cluster_name": "dev-pbdm-wf-cluster",
                  "BUCKET_NAME": "data.med-gold.eu",
                  "workflow_table": "dev-workflow"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "apiRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiLogGroup",
              "apiRole"
            ]
          },
          "RequestLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ict-platform-pbdm-api/dev/1693936854668-2023-09-05T18:00:54.668Z/ict-platform-pbdm-api.zip"
              },
              "Handler": "functions/request-api.state",
              "Runtime": "python3.7",
              "FunctionName": "dev-pbdm-api-state",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "data.med-gold.eu",
                  "cluster_name": "dev-pbdm-wf-cluster",
                  "partial_url": "https://s3-eu-west-1.amazonaws.com",
                  "sf_partialArn": {
                    "Fn::Sub": "arn:aws:states:eu-west-1:${AWS::AccountId}:execution:dev-pbdm-sf:"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "staterequestrole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RequestLogGroup",
              "staterequestrole"
            ]
          },
          "ApiLambdaVersionNRH2d6wM38bZsuIwFmeC8lQUQRoeJX0a97bKUSVtk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "kmRoN1gl3ggDkbb0XrhohEE3SM3BdhULrjRGz5Cgah4="
            }
          },
          "RequestLambdaVersionWincpFlSTkxuIdKUfUJmj5YxqPiLjOU0fBPyjewuL6Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RequestLambdaFunction"
              },
              "CodeSha256": "kmRoN1gl3ggDkbb0XrhohEE3SM3BdhULrjRGz5Cgah4="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-ict-platform-pbdm-api",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceDataset": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "dataset",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceDatasetIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceDataset"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceDatasetIdVarWorkflow": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceDatasetIdVar"
              },
              "PathPart": "workflow",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceDatasetIdVarWorkflowWfVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceDatasetIdVarWorkflow"
              },
              "PathPart": "{wf}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWfVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{wf}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceWfVarRequest": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceWfVar"
              },
              "PathPart": "request",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDatasetIdVarWorkflowWfVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceDatasetIdVarWorkflowWfVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodWfVarRequestOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceWfVarRequest"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDatasetIdVarWorkflowWfVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.querystring.country": true,
                "method.request.querystring.sdate": true,
                "method.request.querystring.edate": true,
                "method.request.querystring.model": true,
                "method.request.querystring.output_time_interval": true,
                "method.request.path.id": true,
                "method.request.path.wf": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceDatasetIdVarWorkflowWfVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "validator"
              }
            },
            "DependsOn": [
              "ApiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodWfVarRequestGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceWfVarRequest"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RequestLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "validator"
              }
            },
            "DependsOn": [
              "RequestLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayIctplatformpbdmapiRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "ict-platform-pbdm-api-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayDeployment1693936850782": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodDatasetIdVarWorkflowWfVarOptions",
              "ApiGatewayMethodWfVarRequestOptions",
              "ApiGatewayMethodDatasetIdVarWorkflowWfVarGet",
              "ApiGatewayMethodWfVarRequestGet"
            ]
          },
          "ApiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RequestLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RequestLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "apiRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "ict-platform-pbdm-api-lambda-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "ict-platform-pbdm-api-lambda-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:GetObject",
                          "s3:PutObject"
                        ],
                        "Resource": [
                          "arn:aws:s3:::data.med-gold.eu/*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:states:eu-west-1:${AWS::AccountId}:stateMachine:dev-pbdm-sf"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "cognito-identity:ListIdentityPools",
                          "cognito-sync:GetCognitoEvents",
                          "cognito-sync:SetCognitoEvents"
                        ],
                        "Resource": [
                          "arn:aws:cognito-idp:eu-west-1:284176251738:userpool/eu-west-1_owfEtSFcp"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Scan"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/dev-mgd-ict-platform-workflow"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "staterequestrole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "ict-platform-pbdm-api-state-request-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "ict-platform-pbdm-api-state-request-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:DescribeExecution"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:states:eu-west-1:${AWS::AccountId}:execution:dev-pbdm-sf:*"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:GetObject"
                        ],
                        "Resource": [
                          "arn:aws:s3:::data.med-gold.eu/*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "cognito-identity:ListIdentityPools",
                          "cognito-sync:GetCognitoEvents",
                          "cognito-sync:SetCognitoEvents"
                        ],
                        "Resource": [
                          "arn:aws:cognito-idp:eu-west-1:284176251738:userpool/eu-west-1_owfEtSFcp"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "validator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "Name": "validator",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-ict-platform-pbdm-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionNRH2d6wM38bZsuIwFmeC8lQUQRoeJX0a97bKUSVtk"
            },
            "Export": {
              "Name": "sls-ict-platform-pbdm-api-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "RequestLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RequestLambdaVersionWincpFlSTkxuIdKUfUJmj5YxqPiLjOU0fBPyjewuL6Q"
            },
            "Export": {
              "Name": "sls-ict-platform-pbdm-api-dev-RequestLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-ict-platform-pbdm-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "env": "dev",
      "BUCKET_NAME": "data.med-gold.eu",
      "workflow_table": "dev-workflow",
      "clusterName": "dev-pbdm-wf-cluster",
      "StepFunctionArn": "arn:aws:states:eu-west-1:#{AWS::AccountId}:stateMachine:dev-pbdm-sf",
      "StepFunctionExecutionArn": "arn:aws:states:eu-west-1:#{AWS::AccountId}:execution:dev-pbdm-sf:",
      "cognito_arn": "arn:aws:cognito-idp:eu-west-1:284176251738:userpool/eu-west-1_owfEtSFcp"
    },
    "plugins": [
      "serverless-pseudo-parameters",
      "serverless-reqvalidator-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "api": {
        "handler": "functions/api.index",
        "name": "dev-pbdm-api-wf",
        "role": "apiRole",
        "events": [
          {
            "http": {
              "path": "dataset/{id}/workflow/{wf}",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.querystring.country": true,
                  "method.request.querystring.sdate": true,
                  "method.request.querystring.edate": true,
                  "method.request.querystring.model": true,
                  "method.request.querystring.output_time_interval": true,
                  "method.request.path.id": true,
                  "method.request.path.wf": true
                }
              },
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "reqValidatorName": "validator",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "sf_arn": "arn:aws:states:eu-west-1:#{AWS::AccountId}:stateMachine:dev-pbdm-sf",
          "cluster_name": "dev-pbdm-wf-cluster",
          "BUCKET_NAME": "data.med-gold.eu",
          "workflow_table": "dev-workflow"
        },
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersionNRH2d6wM38bZsuIwFmeC8lQUQRoeJX0a97bKUSVtk"
      },
      "request": {
        "handler": "functions/request-api.state",
        "name": "dev-pbdm-api-state",
        "role": "staterequestrole",
        "events": [
          {
            "http": {
              "path": "{wf}/request",
              "method": "get",
              "parameters": {
                "paths": {
                  "wf": true
                },
                "querystrings": {
                  "id": true
                }
              },
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "reqValidatorName": "validator",
              "request": null,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "BUCKET_NAME": "data.med-gold.eu",
          "cluster_name": "dev-pbdm-wf-cluster",
          "partial_url": "https://s3-eu-west-1.amazonaws.com",
          "sf_partialArn": "arn:aws:states:eu-west-1:#{AWS::AccountId}:execution:dev-pbdm-sf:"
        },
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "RequestLambdaVersionWincpFlSTkxuIdKUfUJmj5YxqPiLjOU0fBPyjewuL6Q"
      }
    },
    "resources": {
      "Resources": {
        "apiRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "ict-platform-pbdm-api-lambda-role",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "ict-platform-pbdm-api-lambda-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:GetObject",
                        "s3:PutObject"
                      ],
                      "Resource": [
                        "arn:aws:s3:::data.med-gold.eu/*"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "states:StartExecution"
                      ],
                      "Resource": "arn:aws:states:eu-west-1:#{AWS::AccountId}:stateMachine:dev-pbdm-sf"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "cognito-identity:ListIdentityPools",
                        "cognito-sync:GetCognitoEvents",
                        "cognito-sync:SetCognitoEvents"
                      ],
                      "Resource": [
                        "arn:aws:cognito-idp:eu-west-1:284176251738:userpool/eu-west-1_owfEtSFcp"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Scan"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:eu-west-1:#{AWS::AccountId}:table/dev-mgd-ict-platform-workflow"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "staterequestrole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "ict-platform-pbdm-api-state-request-role",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "ict-platform-pbdm-api-state-request-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "states:DescribeExecution"
                      ],
                      "Resource": "arn:aws:states:eu-west-1:#{AWS::AccountId}:execution:dev-pbdm-sf:*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:GetObject"
                      ],
                      "Resource": [
                        "arn:aws:s3:::data.med-gold.eu/*"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "cognito-identity:ListIdentityPools",
                        "cognito-sync:GetCognitoEvents",
                        "cognito-sync:SetCognitoEvents"
                      ],
                      "Resource": [
                        "arn:aws:cognito-idp:eu-west-1:284176251738:userpool/eu-west-1_owfEtSFcp"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "validator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "Name": "validator",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": true
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "app": "ict-platform-backend-app",
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "ict-platform-backend-app",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/federicastocchino/Desktop/PERSONALI/PBDM/mgd-olive-scripts-main/casas_pbdm_workflow/api/.serverless/ict-platform-pbdm-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/ict-platform-pbdm-api/dev/1693936854668-2023-09-05T18:00:54.668Z",
    "artifact": "ict-platform-pbdm-api.zip"
  }
}