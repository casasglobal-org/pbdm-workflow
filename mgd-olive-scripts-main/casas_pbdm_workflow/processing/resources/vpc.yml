Resources:
  
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: "172.16.0.0/16"
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
       - Key: Name
         Value: ${self:provider.stage}-pbdm-wf-vpc

  Subnet:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "${self:provider.region}a"
      CidrBlock: "172.16.0.0/24"
      VpcId: 
        Ref: VPC
      Tags: 
       - Key: Name
         Value: ${self:provider.stage}-pbdm-wf-subnet
  
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: ${self:provider.stage}-pbdm-wf-rt
      VpcId: 
        Ref: VPC

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: String
      GroupName: ${self:provider.stage}-pbdm-wf-sg
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIpv6: ::/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 2049
          ToPort: 2049
          IpProtocol: tcp
      VpcId: 
        Ref: VPC
      Tags: 
       - Key: Name
         Value: ${self:provider.stage}-pbdm-wf-sg

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
       - Key: Name
         Value:  ${self:provider.stage}-pbdm-wf-ig
  
  IGatewayAttachment:  
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: 
        Ref: InternetGateway
      VpcId: 
        Ref: VPC

  Route:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0      
      GatewayId: 
        Ref: InternetGateway
      RouteTableId: 
        Ref: RouteTable


  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: 
        Ref: RouteTable
      SubnetId: 
        Ref: Subnet
