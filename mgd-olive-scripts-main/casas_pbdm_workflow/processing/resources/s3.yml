Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "${self:custom.BUCKET_NAME}"

# TODO
# ApiGatewayStepFunctionsRole:
#   Type: AWS::IAM::Role
#   Properties:
#     Path: !Join ["", ["/",  "${self:provider.stage}", "/"]]
#     AssumeRolePolicyDocument:
#       Version: 2012-10-17
#       Statement:
#         - Sid: AllowApiGatewayServiceToAssumeRole
#           Effect: Allow
#           Action:
#             - 'sts:AssumeRole'
#           Principal:
#             Service:
#               - apigateway.amazonaws.com
#     Policies:
#       - PolicyName: CallStepFunctions
#         PolicyDocument:
#           Version: 2012-10-17
#           Statement:
#             - Effect: Allow
#               Action:
#                 - 'states:StartExecution'
#               Resource:
#                 - !Ref WaitableStateMachine

# ApiGateway:
#   Type: AWS::ApiGateway::RestApi
#   Properties:
#     EndpointConfiguration:
#       Types:
#         - REGIONAL
#     Name: "${self:provider.stage}-pbdm-api"

# ApiGatewayRootMethod:
#   Type: AWS::ApiGateway::Method
#   Properties:
#     AuthorizationType: NONE
#     HttpMethod: POST
#     MethodResponses:
#       - StatusCode: 200
#         ResponseModels:
#           application/json: Empty
#     Integration:
#       IntegrationHttpMethod: POST
#       Type: AWS
#       Credentials: !GetAtt ApiGatewayStepFunctionsRole.Arn 
#       Uri: !Sub arn:aws:apigateway:${AWS::Region}:states:action/StartExecution
#       PassthroughBehavior: WHEN_NO_TEMPLATES
#       RequestTemplates: 
#         application/json: !Sub 
#           - |- 
#             #set($data = $util.escapeJavaScript($input.json('$'))) 
#             { 
#               "input": "$data", 
#               "stateMachineArn": "${StateMachineArn}"
#             }
#           - { StateMachineArn: !Ref WaitableStateMachine }
#       IntegrationResponses:
#         - StatusCode: 200
#           ResponseTemplates:
#             application/json: ''
#     ResourceId: !GetAtt apiGateway.RootResourceId
#     RestApiId: !Ref apiGateway

# ApiGatewayDeployment:
#   Type: AWS::ApiGateway::Deployment
#   DependsOn:
#     - apiGatewayRootMethod
#   Properties:
#     RestApiId: !Ref apiGateway
#     StageName: "${self:provider.stage}"