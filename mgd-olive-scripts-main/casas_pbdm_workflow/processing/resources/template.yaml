AWSTemplateFormatVersion: 2010-09-09
Description: The AWS CloudFormation template for this Serverless application
Resources:
  ServerlessDeploymentBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ServerlessDeploymentBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ServerlessDeploymentBucket
      PolicyDocument:
        Statement:
          - Action: 's3:*'
            Effect: Deny
            Principal: '*'
            Resource:
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':s3:::'
                  - !Ref ServerlessDeploymentBucket
                  - /*
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':s3:::'
                  - !Ref ServerlessDeploymentBucket
            Condition:
              Bool:
                'aws:SecureTransport': false
  DevDashpbdmDashsf:
    Type: 'AWS::StepFunctions::StateMachine'
    Properties:
      DefinitionString: !Sub 
        - |-
          {
            "Comment": "MED-GOLD pbdm workflow",
            "StartAt": "FargateWorker",
            "States": {
              "FargateWorker": {
                "Type": "Task",
                "Resource": "arn:aws:states:::ecs:runTask.sync",
                "Parameters": {
                  "LaunchType": "FARGATE",
                  "Cluster": "${99c588af295f5e15d94aa0ea5ec2e71b}",
                  "TaskDefinition": "${7280f7cf7d562af409dc69f6d09ce1a1}",
                  "PlatformVersion": "1.4.0",
                  "Overrides": {
                    "ContainerOverrides": [
                      {
                        "Name": "dev-pbdm-wf-container",
                        "Environment": [
                          {
                            "Name": "BUCKET_NAME",
                            "Value": "dev-pbdm-workflow"
                          },
                          {
                            "Name": "SECOND_BUCKET_NAME",
                            "Value": "data.pbdm.it"
                          },
                          {
                            "Name": "requestId",
                            "Value.$": "$.requestId"
                          },
                          {
                            "Name": "resolution",
                            "Value.$": "$.resolution"
                          },
                          {
                            "Name": "end_date",
                            "Value.$": "$.end_date"
                          },
                          {
                            "Name": "start_date",
                            "Value.$": "$.start_date"
                          },
                          {
                            "Name": "country",
                            "Value.$": "$.country"
                          },
                          {
                            "Name": "model",
                            "Value.$": "$.model"
                          },
                          {
                            "Name": "dataset",
                            "Value.$": "$.dataset"
                          },
                          {
                            "Name": "output_time_interval",
                            "Value.$": "$.output_time_interval"
                          },
                          {
                            "Name": "wf",
                            "Value.$": "$.wf"
                          }
                        ]
                      }
                    ]
                  },
                  "NetworkConfiguration": {
                    "AwsvpcConfiguration": {
                      "Subnets": [
                        "${ab414755e8fb56e98be3bc1d864ba016}"
                      ],
                      "SecurityGroups": [
                        "${b8faa722685ae0ee8bd00f8552c87368}",
                        "${c48bed845c505cc5fcba8f84aae2518a}"
                      ],
                      "AssignPublicIp": "ENABLED"
                    }
                  }
                },
                "End": true
              }
            }
          }
        - 99c588af295f5e15d94aa0ea5ec2e71b: !Ref cluster
          7280f7cf7d562af409dc69f6d09ce1a1: !Ref taskDefinition
          ab414755e8fb56e98be3bc1d864ba016: !Ref Subnet
          b8faa722685ae0ee8bd00f8552c87368: !Ref SecurityGroup
          c48bed845c505cc5fcba8f84aae2518a: !Ref SecurityGroupEFS
      RoleArn: !GetAtt 
        - stepfunctionrole
        - Arn
      StateMachineName: dev-pbdm-sf
    DependsOn: []
  stepfunctionrole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: dev-pbdm-StepFunctionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - states.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      Policies:
        - PolicyName: dev-pbdm-StepFunctionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ecs:RunTask'
                Resource: !Sub >-
                  arn:aws:ecs:eu-west-1:${AWS::AccountId}:cluster/dev-pbdm-wf-cluster
              - Effect: Allow
                Action:
                  - 'ecs:RunTask'
                Resource: !Sub >-
                  arn:aws:ecs:eu-west-1:${AWS::AccountId}:task-definition/dev-pbdm-task-definition:*
              - Effect: Allow
                Action:
                  - 'events:PutTargets'
                  - 'events:PutRule'
                  - 'events:DescribeRule'
                Resource: !Sub >-
                  arn:aws:events:eu-west-1:${AWS::AccountId}:rule/StepFunctionsGetEventsForECSTaskRule
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: !Sub >-
                  arn:aws:iam::${AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole
  ecsTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: dev-pbdm-ecsTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
                - ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      Policies:
        - PolicyName: dev-pbdm-ecsTaskExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:ListBucket'
                  - 's3:PutObjectAcl'
                  - 's3:GetObject'
                Resource:
                  - 'arn:aws:s3:::data.med-gold.eu'
                  - 'arn:aws:s3:::*/*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  cluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: dev-pbdm-wf-cluster
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: dev-pbdm-wf-log-group
      RetentionInDays: 30
  taskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Name: dev-pbdm-wf-container
          Cpu: 1
          Essential: true
          MountPoints:
            - ContainerPath: /filesystem
              SourceVolume: data
          Image: !Sub >-
            ${AWS::AccountId}.dkr.ecr.eu-west-1.amazonaws.com/dev-pbdm-wf-worker-image:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: dev-pbdm-wf-log-group
              awslogs-region: eu-west-1
              awslogs-stream-prefix: dev-pbdm-task-definition
      Cpu: '2048'
      ExecutionRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole'
      TaskRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole'
      Family: dev-pbdm-task-definition
      Memory: 8GB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Volumes:
        - Name: data
          EfsVolumeConfiguration:
            FileSystemId: !Ref FileSystem
  ecr:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: dev-pbdm-wf-worker-image
  SecurityGroupEFS:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: EFS security group
      GroupName: dev-pbdm-wf-efs-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref SecurityGroup
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: dev-pbdm-wf-efs-sg
  FileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      FileSystemTags:
        - Key: Name
          Value: dev-pbdm-wf-efs
  MountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref FileSystem
      SecurityGroups:
        - !Ref SecurityGroupEFS
      SubnetId: !Ref Subnet
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.16.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: dev-pbdm-wf-vpc
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 172.16.0.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: dev-pbdm-wf-subnet
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags:
        - Key: Name
          Value: dev-pbdm-wf-rt
      VpcId: !Ref VPC
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: String
      GroupName: dev-pbdm-wf-sg
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIpv6: '::/0'
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: dev-pbdm-wf-sg
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: dev-pbdm-wf-ig
  IGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  Route:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: dev-pbdm-workflow
Outputs:
  ServerlessDeploymentBucketName:
    Value: !Ref ServerlessDeploymentBucket
    Export:
      Name: sls-ict-platform-pbdm-wf-dev-ServerlessDeploymentBucketName
  DevDashpbdmDashsfArn:
    Description: Current StateMachine Arn
    Value: !Ref DevDashpbdmDashsf
    Export:
      Name: sls-ict-platform-pbdm-wf-dev-DevDashpbdmDashsfArn
