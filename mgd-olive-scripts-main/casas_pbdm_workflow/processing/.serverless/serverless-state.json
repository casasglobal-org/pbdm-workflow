{
  "service": {
    "service": "ict-platform-pbdm-wf",
    "serviceObject": {
      "name": "ict-platform-pbdm-wf"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.7",
      "region": "eu-west-1",
      "stage": "dev",
      "stackTags": {
        "Name": "ict-platform-backend",
        "Environment": "dev",
        "Role": "pbdm-wf"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "DevDashpbdmDashsf": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"Comment\": \"MED-GOLD pbdm workflow\",\n  \"StartAt\": \"FargateWorker\",\n  \"States\": {\n    \"FargateWorker\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:states:::ecs:runTask.sync\",\n      \"Parameters\": {\n        \"LaunchType\": \"FARGATE\",\n        \"Cluster\": \"${99c588af295f5e15d94aa0ea5ec2e71b}\",\n        \"TaskDefinition\": \"${7280f7cf7d562af409dc69f6d09ce1a1}\",\n        \"PlatformVersion\": \"1.4.0\",\n        \"Overrides\": {\n          \"ContainerOverrides\": [\n            {\n              \"Name\": \"dev-pbdm-wf-container\",\n              \"Environment\": [\n                {\n                  \"Name\": \"BUCKET_NAME\",\n                  \"Value\": \"dev-pbdm-workflow\"\n                },\n                {\n                  \"Name\": \"requestId\",\n                  \"Value.$\": \"$.requestId\"\n                },\n                {\n                  \"Name\": \"end_date\",\n                  \"Value.$\": \"$.end_date\"\n                },\n                {\n                  \"Name\": \"start_date\",\n                  \"Value.$\": \"$.start_date\"\n                },\n                {\n                  \"Name\": \"country\",\n                  \"Value.$\": \"$.country\"\n                },\n                {\n                  \"Name\": \"model\",\n                  \"Value.$\": \"$.model\"\n                },\n                {\n                  \"Name\": \"dataset\",\n                  \"Value.$\": \"$.dataset\"\n                },\n                {\n                  \"Name\": \"output_time_interval\",\n                  \"Value.$\": \"$.output_time_interval\"\n                },\n                {\n                  \"Name\": \"wf\",\n                  \"Value.$\": \"$.wf\"\n                }\n              ]\n            }\n          ]\n        },\n        \"NetworkConfiguration\": {\n          \"AwsvpcConfiguration\": {\n            \"Subnets\": [\n              \"${ab414755e8fb56e98be3bc1d864ba016}\"\n            ],\n            \"SecurityGroups\": [\n              \"${b8faa722685ae0ee8bd00f8552c87368}\",\n              \"${c48bed845c505cc5fcba8f84aae2518a}\"\n            ],\n            \"AssignPublicIp\": \"ENABLED\"\n          }\n        }\n      },\n      \"End\": true\n    }\n  }\n}",
                  {
                    "99c588af295f5e15d94aa0ea5ec2e71b": {
                      "Ref": "cluster"
                    },
                    "7280f7cf7d562af409dc69f6d09ce1a1": {
                      "Ref": "taskDefinition"
                    },
                    "ab414755e8fb56e98be3bc1d864ba016": {
                      "Ref": "Subnet"
                    },
                    "b8faa722685ae0ee8bd00f8552c87368": {
                      "Ref": "SecurityGroup"
                    },
                    "c48bed845c505cc5fcba8f84aae2518a": {
                      "Ref": "SecurityGroupEFS"
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "stepfunctionrole",
                  "Arn"
                ]
              },
              "StateMachineName": "dev-pbdm-sf"
            },
            "DependsOn": []
          },
          "stepfunctionrole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "dev-pbdm-StepFunctionRole",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com",
                        "states.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
              ],
              "Policies": [
                {
                  "PolicyName": "dev-pbdm-StepFunctionPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ecs:RunTask"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:ecs:eu-west-1:${AWS::AccountId}:cluster/dev-pbdm-wf-cluster"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ecs:RunTask"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:ecs:eu-west-1:${AWS::AccountId}:task-definition/dev-pbdm-task-definition:*"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "events:PutTargets",
                          "events:PutRule",
                          "events:DescribeRule"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:events:eu-west-1:${AWS::AccountId}:rule/StepFunctionsGetEventsForECSTaskRule"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "iam:PassRole"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ecsTaskExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "dev-pbdm-ecsTaskExecutionRole",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com",
                        "ecs-tasks.amazonaws.com",
                        "ec2.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
              ],
              "Policies": [
                {
                  "PolicyName": "dev-pbdm-ecsTaskExecutionPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject",
                          "s3:ListBucket",
                          "s3:PutObjectAcl",
                          "s3:GetObject"
                        ],
                        "Resource": [
                          "arn:aws:s3:::data.med-gold.eu",
                          "arn:aws:s3:::*/*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "cluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
              "ClusterName": "dev-pbdm-wf-cluster"
            }
          },
          "LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "dev-pbdm-wf-log-group",
              "RetentionInDays": 30
            }
          },
          "taskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
              "ContainerDefinitions": [
                {
                  "Name": "dev-pbdm-wf-container",
                  "Cpu": 1,
                  "Essential": true,
                  "MountPoints": [
                    {
                      "ContainerPath": "/filesystem",
                      "SourceVolume": "data"
                    }
                  ],
                  "Image": {
                    "Fn::Sub": "${AWS::AccountId}.dkr.ecr.eu-west-1.amazonaws.com/dev-pbdm-wf-worker-image:latest"
                  },
                  "LogConfiguration": {
                    "LogDriver": "awslogs",
                    "Options": {
                      "awslogs-group": "dev-pbdm-wf-log-group",
                      "awslogs-region": "eu-west-1",
                      "awslogs-stream-prefix": "dev-pbdm-task-definition"
                    }
                  }
                }
              ],
              "Cpu": "2048",
              "ExecutionRoleArn": {
                "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole"
              },
              "TaskRoleArn": {
                "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole"
              },
              "Family": "dev-pbdm-task-definition",
              "Memory": "8GB",
              "NetworkMode": "awsvpc",
              "RequiresCompatibilities": [
                "FARGATE"
              ],
              "Volumes": [
                {
                  "Name": "data",
                  "EfsVolumeConfiguration": {
                    "FileSystemId": {
                      "Ref": "FileSystem"
                    }
                  }
                }
              ]
            }
          },
          "ecr": {
            "Type": "AWS::ECR::Repository",
            "Properties": {
              "RepositoryName": "dev-pbdm-wf-worker-image"
            }
          },
          "SecurityGroupEFS": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "EFS security group",
              "GroupName": "dev-pbdm-wf-efs-sg",
              "SecurityGroupIngress": [
                {
                  "IpProtocol": "tcp",
                  "FromPort": 2049,
                  "ToPort": 2049,
                  "SourceSecurityGroupId": {
                    "Ref": "SecurityGroup"
                  }
                }
              ],
              "VpcId": {
                "Ref": "VPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-efs-sg"
                }
              ]
            }
          },
          "FileSystem": {
            "Type": "AWS::EFS::FileSystem",
            "Properties": {
              "FileSystemTags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-efs"
                }
              ]
            }
          },
          "MountTarget": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
              "FileSystemId": {
                "Ref": "FileSystem"
              },
              "SecurityGroups": [
                {
                  "Ref": "SecurityGroupEFS"
                }
              ],
              "SubnetId": {
                "Ref": "Subnet"
              }
            }
          },
          "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "172.16.0.0/16",
              "EnableDnsHostnames": true,
              "EnableDnsSupport": true,
              "InstanceTenancy": "default",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-vpc"
                }
              ]
            }
          },
          "Subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "eu-west-1a",
              "CidrBlock": "172.16.0.0/24",
              "VpcId": {
                "Ref": "VPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-subnet"
                }
              ]
            }
          },
          "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-rt"
                }
              ],
              "VpcId": {
                "Ref": "VPC"
              }
            }
          },
          "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "String",
              "GroupName": "dev-pbdm-wf-sg",
              "SecurityGroupIngress": [
                {
                  "CidrIp": "0.0.0.0/0",
                  "FromPort": 80,
                  "ToPort": 80,
                  "IpProtocol": "tcp"
                },
                {
                  "CidrIpv6": "::/0",
                  "FromPort": 80,
                  "ToPort": 80,
                  "IpProtocol": "tcp"
                }
              ],
              "VpcId": {
                "Ref": "VPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-sg"
                }
              ]
            }
          },
          "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "dev-pbdm-wf-ig"
                }
              ]
            }
          },
          "IGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "InternetGatewayId": {
                "Ref": "InternetGateway"
              },
              "VpcId": {
                "Ref": "VPC"
              }
            }
          },
          "Route": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "DestinationCidrBlock": "0.0.0.0/0",
              "GatewayId": {
                "Ref": "InternetGateway"
              },
              "RouteTableId": {
                "Ref": "RouteTable"
              }
            }
          },
          "SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "RouteTable"
              },
              "SubnetId": {
                "Ref": "Subnet"
              }
            }
          },
          "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "dev-pbdm-workflow"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-ict-platform-pbdm-wf-dev-ServerlessDeploymentBucketName"
            }
          },
          "DevDashpbdmDashsfArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "DevDashpbdmDashsf"
            },
            "Export": {
              "Name": "sls-ict-platform-pbdm-wf-dev-DevDashpbdmDashsfArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "BUCKET_NAME": "dev-pbdm-workflow",
      "task_definition": "dev-pbdm-task-definition"
    },
    "plugins": [
      "serverless-step-functions",
      "serverless-pseudo-parameters"
    ],
    "pluginsData": {},
    "functions": {},
    "resources": {
      "Resources": {
        "stepfunctionrole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "dev-pbdm-StepFunctionRole",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com",
                      "states.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
            ],
            "Policies": [
              {
                "PolicyName": "dev-pbdm-StepFunctionPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ecs:RunTask"
                      ],
                      "Resource": "arn:aws:ecs:eu-west-1:#{AWS::AccountId}:cluster/dev-pbdm-wf-cluster"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ecs:RunTask"
                      ],
                      "Resource": "arn:aws:ecs:eu-west-1:#{AWS::AccountId}:task-definition/dev-pbdm-task-definition:*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "events:PutTargets",
                        "events:PutRule",
                        "events:DescribeRule"
                      ],
                      "Resource": "arn:aws:events:eu-west-1:#{AWS::AccountId}:rule/StepFunctionsGetEventsForECSTaskRule"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "iam:PassRole"
                      ],
                      "Resource": "arn:aws:iam::#{AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole"
                    }
                  ]
                }
              }
            ]
          }
        },
        "ecsTaskExecutionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "dev-pbdm-ecsTaskExecutionRole",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com",
                      "ecs-tasks.amazonaws.com",
                      "ec2.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
            ],
            "Policies": [
              {
                "PolicyName": "dev-pbdm-ecsTaskExecutionPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:ListBucket",
                        "s3:PutObjectAcl",
                        "s3:GetObject"
                      ],
                      "Resource": [
                        "arn:aws:s3:::data.med-gold.eu",
                        "arn:aws:s3:::*/*"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        },
        "cluster": {
          "Type": "AWS::ECS::Cluster",
          "Properties": {
            "ClusterName": "dev-pbdm-wf-cluster"
          }
        },
        "LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "dev-pbdm-wf-log-group",
            "RetentionInDays": 30
          }
        },
        "taskDefinition": {
          "Type": "AWS::ECS::TaskDefinition",
          "Properties": {
            "ContainerDefinitions": [
              {
                "Name": "dev-pbdm-wf-container",
                "Cpu": 1,
                "Essential": true,
                "MountPoints": [
                  {
                    "ContainerPath": "/filesystem",
                    "SourceVolume": "data"
                  }
                ],
                "Image": "#{AWS::AccountId}.dkr.ecr.eu-west-1.amazonaws.com/dev-pbdm-wf-worker-image:latest",
                "LogConfiguration": {
                  "LogDriver": "awslogs",
                  "Options": {
                    "awslogs-group": "dev-pbdm-wf-log-group",
                    "awslogs-region": "eu-west-1",
                    "awslogs-stream-prefix": "dev-pbdm-task-definition"
                  }
                }
              }
            ],
            "Cpu": "2048",
            "ExecutionRoleArn": "arn:aws:iam::#{AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole",
            "TaskRoleArn": "arn:aws:iam::#{AWS::AccountId}:role/dev-pbdm-ecsTaskExecutionRole",
            "Family": "dev-pbdm-task-definition",
            "Memory": "8GB",
            "NetworkMode": "awsvpc",
            "RequiresCompatibilities": [
              "FARGATE"
            ],
            "Volumes": [
              {
                "Name": "data",
                "EfsVolumeConfiguration": {
                  "FileSystemId": {
                    "Ref": "FileSystem"
                  }
                }
              }
            ]
          }
        },
        "ecr": {
          "Type": "AWS::ECR::Repository",
          "Properties": {
            "RepositoryName": "dev-pbdm-wf-worker-image"
          }
        },
        "SecurityGroupEFS": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "EFS security group",
            "GroupName": "dev-pbdm-wf-efs-sg",
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": 2049,
                "ToPort": 2049,
                "SourceSecurityGroupId": {
                  "Ref": "SecurityGroup"
                }
              }
            ],
            "VpcId": {
              "Ref": "VPC"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-efs-sg"
              }
            ]
          }
        },
        "FileSystem": {
          "Type": "AWS::EFS::FileSystem",
          "Properties": {
            "FileSystemTags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-efs"
              }
            ]
          }
        },
        "MountTarget": {
          "Type": "AWS::EFS::MountTarget",
          "Properties": {
            "FileSystemId": {
              "Ref": "FileSystem"
            },
            "SecurityGroups": [
              {
                "Ref": "SecurityGroupEFS"
              }
            ],
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        },
        "VPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "172.16.0.0/16",
            "EnableDnsHostnames": true,
            "EnableDnsSupport": true,
            "InstanceTenancy": "default",
            "Tags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-vpc"
              }
            ]
          }
        },
        "Subnet": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": "eu-west-1a",
            "CidrBlock": "172.16.0.0/24",
            "VpcId": {
              "Ref": "VPC"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-subnet"
              }
            ]
          }
        },
        "RouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "Tags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-rt"
              }
            ],
            "VpcId": {
              "Ref": "VPC"
            }
          }
        },
        "SecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "String",
            "GroupName": "dev-pbdm-wf-sg",
            "SecurityGroupIngress": [
              {
                "CidrIp": "0.0.0.0/0",
                "FromPort": 80,
                "ToPort": 80,
                "IpProtocol": "tcp"
              },
              {
                "CidrIpv6": "::/0",
                "FromPort": 80,
                "ToPort": 80,
                "IpProtocol": "tcp"
              }
            ],
            "VpcId": {
              "Ref": "VPC"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-sg"
              }
            ]
          }
        },
        "InternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {
            "Tags": [
              {
                "Key": "Name",
                "Value": "dev-pbdm-wf-ig"
              }
            ]
          }
        },
        "IGatewayAttachment": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "InternetGatewayId": {
              "Ref": "InternetGateway"
            },
            "VpcId": {
              "Ref": "VPC"
            }
          }
        },
        "Route": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "DestinationCidrBlock": "0.0.0.0/0",
            "GatewayId": {
              "Ref": "InternetGateway"
            },
            "RouteTableId": {
              "Ref": "RouteTable"
            }
          }
        },
        "SubnetRouteTableAssociation": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "RouteTable"
            },
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        },
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "dev-pbdm-workflow"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "app": "ict-platform-backend-app",
      "service": "ict-platform-pbdm-wf",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "stepFunctions": {
        "stateMachines": {
          "StepFunction": {
            "name": "dev-pbdm-sf",
            "role": {
              "Fn::GetAtt": [
                "stepfunctionrole",
                "Arn"
              ]
            },
            "definition": {
              "Comment": "MED-GOLD pbdm workflow",
              "StartAt": "FargateWorker",
              "States": {
                "FargateWorker": {
                  "Type": "Task",
                  "Resource": "arn:aws:states:::ecs:runTask.sync",
                  "Parameters": {
                    "LaunchType": "FARGATE",
                    "Cluster": "${99c588af295f5e15d94aa0ea5ec2e71b}",
                    "TaskDefinition": "${7280f7cf7d562af409dc69f6d09ce1a1}",
                    "PlatformVersion": "1.4.0",
                    "Overrides": {
                      "ContainerOverrides": [
                        {
                          "Name": "dev-pbdm-wf-container",
                          "Environment": [
                            {
                              "Name": "BUCKET_NAME",
                              "Value": "dev-pbdm-workflow"
                            },
                            {
                              "Name": "requestId",
                              "Value.$": "$.requestId"
                            },
                            {
                              "Name": "end_date",
                              "Value.$": "$.end_date"
                            },
                            {
                              "Name": "start_date",
                              "Value.$": "$.start_date"
                            },
                            {
                              "Name": "country",
                              "Value.$": "$.country"
                            },
                            {
                              "Name": "model",
                              "Value.$": "$.model"
                            },
                            {
                              "Name": "dataset",
                              "Value.$": "$.dataset"
                            },
                            {
                              "Name": "output_time_interval",
                              "Value.$": "$.output_time_interval"
                            },
                            {
                              "Name": "wf",
                              "Value.$": "$.wf"
                            }
                          ]
                        }
                      ]
                    },
                    "NetworkConfiguration": {
                      "AwsvpcConfiguration": {
                        "Subnets": [
                          "${ab414755e8fb56e98be3bc1d864ba016}"
                        ],
                        "SecurityGroups": [
                          "${b8faa722685ae0ee8bd00f8552c87368}",
                          "${c48bed845c505cc5fcba8f84aae2518a}"
                        ],
                        "AssignPublicIp": "ENABLED"
                      }
                    }
                  },
                  "End": true
                }
              }
            }
          }
        }
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "ict-platform-backend-app",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "stateMachines": {
        "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"stepFunctions\"][\"stateMachines\"]"
      },
      "activities": []
    }
  },
  "package": {
    "artifactDirectoryName": "serverless/ict-platform-pbdm-wf/dev/1693936317321-2023-09-05T17:51:57.321Z",
    "artifact": ""
  }
}